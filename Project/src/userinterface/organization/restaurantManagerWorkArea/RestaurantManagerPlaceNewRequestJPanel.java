/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.organization.restaurantManagerWorkArea;

import business.enterprise.Enterprise;
import business.organization.HouseholdOrganization;
import business.organization.Organization;
import business.organization.RestaurantOrganization;
import business.product.Product;
import business.userAccount.UserAccount;
import business.workQueue.FoodOfferWorkRequest;
import business.workQueue.StatusEnum;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Monas
 */
public class RestaurantManagerPlaceNewRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form RestaurantNewOrderJPanel
     */
    private JPanel userProcessContainer;
    private RestaurantOrganization restaurantOrganization;
    private UserAccount userAccount;
    private Enterprise enterprise;

    public RestaurantManagerPlaceNewRequestJPanel(JPanel userProcessContainer, UserAccount userAccount, RestaurantOrganization restaurantOrganization, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.restaurantOrganization = restaurantOrganization;
        this.userAccount = userAccount;
        this.enterprise = enterprise;
        populateProductJComboBox();
        populateRequestJTable();
    }

    private void populateProductJComboBox() {
        productjComboBox.removeAllItems();
        for (Product product : restaurantOrganization.getProductCatalog().getProductCatalog()) {
            productjComboBox.addItem(product);
        }
    }

    private void populateRequestJTable() {
        DefaultTableModel model = (DefaultTableModel) requestJTable.getModel();

        model.setRowCount(0);

        for (UserAccount ua : restaurantOrganization.getUserAccountDirectory().getUserAccountList()) {
            for (FoodOfferWorkRequest workRequest : ua.getFoodOfferWorkQueue().getFoodOfferWorkRequestList()) {
                workRequest.checkExpired();
                Object[] row = new Object[6];
                row[0] = workRequest.getProduct();
                row[1] = workRequest.getAmount();
                row[2] = workRequest.getTotalQuantity();
                row[3] = workRequest.getAvailQuantity();
                row[4] = workRequest.getSender();
                row[5] = workRequest.getStatus();
                model.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        requestJTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        productjComboBox = new javax.swing.JComboBox();
        quantityjTextField = new javax.swing.JTextField();
        pricejTextField = new javax.swing.JTextField();
        placeRequestjButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        backBtn.setText("<< Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Yu Gothic", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Place Food Offers");

        requestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Price", "Total Quantity", "Available Quantity", "Raised by", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(requestJTable);

        jLabel2.setText("Product Name:");

        jLabel3.setText("Quantity:");

        jLabel4.setText("Price:");

        productjComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        placeRequestjButton.setText("Place Offer");
        placeRequestjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                placeRequestjButtonActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel5.setText("Place Food Offer:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 477, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(154, 154, 154)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(30, 30, 30)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(productjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(quantityjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(pricejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(placeRequestjButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 147, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(productjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(quantityjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(pricejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(placeRequestjButton)
                .addContainerGap(60, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void placeRequestjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_placeRequestjButtonActionPerformed
        int totalQuantity = 0;
        float amount = 0;

        Product product = (Product) productjComboBox.getSelectedItem();
        try {
            totalQuantity = Integer.parseInt(quantityjTextField.getText());
            amount = Float.parseFloat(pricejTextField.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Please provide numeric values", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        FoodOfferWorkRequest foodOfferWorkRequest = new FoodOfferWorkRequest();
        foodOfferWorkRequest.setProduct(product);
        foodOfferWorkRequest.setTotalQuantity(totalQuantity);
        foodOfferWorkRequest.setAmount(amount);
        foodOfferWorkRequest.setSender(userAccount);
        foodOfferWorkRequest.setOrganizationName(restaurantOrganization.getOrganizationName());
        foodOfferWorkRequest.setStatus(StatusEnum.RestaurantToSell);
        Organization org = null;
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (organization instanceof HouseholdOrganization) {
                org = organization;
                break;
            }
        }
        if (org != null) {
            org.getFoodOfferWorkQueue().getFoodOfferWorkRequestList().add(foodOfferWorkRequest);
            userAccount.getFoodOfferWorkQueue().getFoodOfferWorkRequestList().add(foodOfferWorkRequest);
        }
        populateRequestJTable();
        quantityjTextField.setText("");
        pricejTextField.setText("");
        productjComboBox.setSelectedIndex(0);
    }//GEN-LAST:event_placeRequestjButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton placeRequestjButton;
    private javax.swing.JTextField pricejTextField;
    private javax.swing.JComboBox productjComboBox;
    private javax.swing.JTextField quantityjTextField;
    private javax.swing.JTable requestJTable;
    // End of variables declaration//GEN-END:variables
}
