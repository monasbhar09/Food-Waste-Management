/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.organization.restaurantManagerWorkArea;

import business.organization.RestaurantOrganization;
import business.userAccount.UserAccount;
import business.workQueue.FoodOfferWorkRequest;
import business.workQueue.StatusEnum;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author Monas
 */
public class RestaurantFoodRevenueLineChartJPanel extends javax.swing.JPanel {

    /**
     * Creates new form GroceryFoodWastePieChart
     */
    private JPanel userProcessContainer;
    private RestaurantOrganization restaurantOrganization;

    public RestaurantFoodRevenueLineChartJPanel(JPanel userProcessContainer, RestaurantOrganization restaurantOrganization) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.restaurantOrganization = restaurantOrganization;

        JFreeChart chart = createChart(createDataset());
        ChartPanel myChart = new ChartPanel(chart);
        myChart.setMouseWheelEnabled(true);
        barChartJPanel.setLayout(new java.awt.BorderLayout());
        barChartJPanel.add(myChart, BorderLayout.CENTER);
        barChartJPanel.validate();
    }

    private static JFreeChart createChart(DefaultCategoryDataset dataset) {
        JFreeChart chart = ChartFactory.createLineChart("Revenue Vs Time", "Time", "Revenue", dataset, PlotOrientation.VERTICAL, true, true, false);

        return chart;
    }

    private DefaultCategoryDataset createDataset() {
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        ArrayList<String> dateList = new ArrayList<>();
        for (UserAccount ua : restaurantOrganization.getUserAccountDirectory().getUserAccountList()) {
            for (FoodOfferWorkRequest workRequest : ua.getFoodOfferWorkQueue().getFoodOfferWorkRequestList()) {
                DateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy");
                dateList.add(dateFormat.format(workRequest.getDate()));
            }
        }
        List<String> listDistinct = dateList.stream().distinct().collect(Collectors.toList());
        int profitOfTheDay;
        for (String date : listDistinct) {
            profitOfTheDay = 0;
            for (UserAccount ua : restaurantOrganization.getUserAccountDirectory().getUserAccountList()) {
                for (FoodOfferWorkRequest workRequest : ua.getFoodOfferWorkQueue().getFoodOfferWorkRequestList()) {
                    if (workRequest.getStatus().equals(StatusEnum.Expired)) {
                        DateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy");
                        String requestedDate = dateFormat.format(workRequest.getDate());
                        if (requestedDate.equalsIgnoreCase(date)) {
                            profitOfTheDay += workRequest.getAmount() * (workRequest.getTotalQuantity() - workRequest.getAvailQuantity());
                        }
                    }
                }
            }
            dataset.addValue(profitOfTheDay, "Revenue", date);
        }
        return dataset;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        selectionJPanel = new javax.swing.JPanel();
        backjButton = new javax.swing.JButton();
        barChartJPanel = new javax.swing.JPanel();

        jSplitPane1.setDividerLocation(150);

        backjButton.setText("<<Back");
        backjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout selectionJPanelLayout = new javax.swing.GroupLayout(selectionJPanel);
        selectionJPanel.setLayout(selectionJPanelLayout);
        selectionJPanelLayout.setHorizontalGroup(
            selectionJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(selectionJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backjButton, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                .addContainerGap())
        );
        selectionJPanelLayout.setVerticalGroup(
            selectionJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(selectionJPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(backjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(479, Short.MAX_VALUE))
        );

        jSplitPane1.setLeftComponent(selectionJPanel);

        javax.swing.GroupLayout barChartJPanelLayout = new javax.swing.GroupLayout(barChartJPanel);
        barChartJPanel.setLayout(barChartJPanelLayout);
        barChartJPanelLayout.setHorizontalGroup(
            barChartJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 662, Short.MAX_VALUE)
        );
        barChartJPanelLayout.setVerticalGroup(
            barChartJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 552, Short.MAX_VALUE)
        );

        jSplitPane1.setRightComponent(barChartJPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButtonActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backjButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backjButton;
    private javax.swing.JPanel barChartJPanel;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JPanel selectionJPanel;
    // End of variables declaration//GEN-END:variables
}
