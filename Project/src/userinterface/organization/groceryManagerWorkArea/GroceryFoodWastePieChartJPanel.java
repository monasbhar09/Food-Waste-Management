/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.organization.groceryManagerWorkArea;

import business.organization.GroceryOrganization;
import business.userAccount.UserAccount;
import business.workQueue.StatusEnum;
import business.workQueue.UglyGroceryWorkRequest;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.general.PieDataset;

/**
 *
 * @author Monas
 */
public class GroceryFoodWastePieChartJPanel extends javax.swing.JPanel {

    /**
     * Creates new form GroceryFoodWastePieChart
     */
    private JPanel userProcessContainer;
    private GroceryOrganization groceryOrganization;

    public GroceryFoodWastePieChartJPanel(JPanel userProcessContainer, GroceryOrganization groceryOrganization) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.groceryOrganization = groceryOrganization;

        populateDaySelectionJComboBox();

    }

    private static JFreeChart createChart(PieDataset dataset) {
        JFreeChart chart = ChartFactory.createPieChart3D(
                "Food Waste Management", // chart title 
                dataset, // data    
                true, // include legend   
                true,
                false);

        return chart;
    }

    private PieDataset createDataset(String selectedDate) {
        DefaultPieDataset dataset = new DefaultPieDataset();
        int totalQty = 0;
        int wasteFood = 0;
        if (selectedDate.equalsIgnoreCase("All")) {
            for (UserAccount ua : groceryOrganization.getUserAccountDirectory().getUserAccountList()) {
                for (UglyGroceryWorkRequest workRequest : ua.getGroceryWorkQueue().getUglyGroceryWorkRequestList()) {
                    if (workRequest.getStatus().equals(StatusEnum.Expired)) {
                        totalQty += workRequest.getTotalQuantity();
                        wasteFood += workRequest.getAvailQuantity();
                    }
                }
            }
        } else {
            for (UserAccount ua : groceryOrganization.getUserAccountDirectory().getUserAccountList()) {
                for (UglyGroceryWorkRequest workRequest : ua.getGroceryWorkQueue().getUglyGroceryWorkRequestList()) {
                    if (workRequest.getStatus().equals(StatusEnum.Expired)) {
                        DateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy");
                        String requestedDate = dateFormat.format(workRequest.getDate());
                        if (requestedDate.equalsIgnoreCase(selectedDate)) {
                            totalQty += workRequest.getTotalQuantity();
                            wasteFood += workRequest.getAvailQuantity();
                        }

                    }
                }
            }
        }

        dataset.setValue("Waste Product", wasteFood);
        dataset.setValue("Saved From Wastage", totalQty);

        return dataset;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        selectionJPanel = new javax.swing.JPanel();
        backjButton = new javax.swing.JButton();
        daySelectionjComboBox = new javax.swing.JComboBox<>();
        pieChartJPanel = new javax.swing.JPanel();

        jSplitPane1.setDividerLocation(150);

        backjButton.setText("<<Back");
        backjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButtonActionPerformed(evt);
            }
        });

        daySelectionjComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        daySelectionjComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                daySelectionjComboBoxActionPerformed(evt);
            }
        });
        daySelectionjComboBox.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                daySelectionjComboBoxPropertyChange(evt);
            }
        });

        javax.swing.GroupLayout selectionJPanelLayout = new javax.swing.GroupLayout(selectionJPanel);
        selectionJPanel.setLayout(selectionJPanelLayout);
        selectionJPanelLayout.setHorizontalGroup(
            selectionJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, selectionJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(selectionJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(daySelectionjComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(backjButton, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE))
                .addContainerGap())
        );
        selectionJPanelLayout.setVerticalGroup(
            selectionJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(selectionJPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(backjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addComponent(daySelectionjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(392, Short.MAX_VALUE))
        );

        jSplitPane1.setLeftComponent(selectionJPanel);

        javax.swing.GroupLayout pieChartJPanelLayout = new javax.swing.GroupLayout(pieChartJPanel);
        pieChartJPanel.setLayout(pieChartJPanelLayout);
        pieChartJPanelLayout.setHorizontalGroup(
            pieChartJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 662, Short.MAX_VALUE)
        );
        pieChartJPanelLayout.setVerticalGroup(
            pieChartJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 552, Short.MAX_VALUE)
        );

        jSplitPane1.setRightComponent(pieChartJPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButtonActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backjButtonActionPerformed

    private void daySelectionjComboBoxPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_daySelectionjComboBoxPropertyChange
        updateChart((String) daySelectionjComboBox.getSelectedItem());
    }//GEN-LAST:event_daySelectionjComboBoxPropertyChange

    private void daySelectionjComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_daySelectionjComboBoxActionPerformed
        if (daySelectionjComboBox.getSelectedItem() == null) {
            updateChart("All");
        } else {
            updateChart((String) daySelectionjComboBox.getSelectedItem());
        }
    }//GEN-LAST:event_daySelectionjComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backjButton;
    private javax.swing.JComboBox<String> daySelectionjComboBox;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JPanel pieChartJPanel;
    private javax.swing.JPanel selectionJPanel;
    // End of variables declaration//GEN-END:variables

    private void populateDaySelectionJComboBox() {
        daySelectionjComboBox.removeAllItems();
        daySelectionjComboBox.addItem("All");
        ArrayList<String> dateList = new ArrayList<>();
        for (UserAccount ua : groceryOrganization.getUserAccountDirectory().getUserAccountList()) {
            for (UglyGroceryWorkRequest workRequest : ua.getGroceryWorkQueue().getUglyGroceryWorkRequestList()) {
                DateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy");
                dateList.add(dateFormat.format(workRequest.getDate()));
            }
        }
        List<String> listDistinct = dateList.stream().distinct().collect(Collectors.toList());
        listDistinct.forEach(date -> daySelectionjComboBox.addItem(date));
    }

    private void updateChart(String selectedItem) {
        pieChartJPanel.removeAll();
        pieChartJPanel.revalidate();
        JFreeChart chart = createChart(createDataset(selectedItem));
        ChartPanel myChart = new ChartPanel(chart);
        myChart.setMouseWheelEnabled(true);
        pieChartJPanel.setLayout(new java.awt.BorderLayout());
        pieChartJPanel.add(myChart, BorderLayout.CENTER);
        pieChartJPanel.validate();
        pieChartJPanel.repaint();
    }
}
